# P7/cloudbuild.yaml
# Cloud Build para desplegar microservicios en GKE usando imágenes públicas de Docker Hub

steps:
  # Paso 1: Autenticación en GKE
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Autenticación GKE'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Obteniendo credenciales del cluster..."
        gcloud container clusters get-credentials practicas-sa-cluster \
          --zone us-central1-c \
          --project groovy-treat-472922-b3

  # Paso 2: Desplegar MySQL (si es que no está desplegado)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Desplegar MySQL'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Aplicando despliegue de MySQL..."
        kubectl apply -f k8s/mysql-deployment.yaml -n practicas-sa

  # Paso 3: Desplegar user-service (usa imagen pública de Docker Hub)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Desplegar User Service'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Aplicando despliegue de User Service..."
        kubectl apply -f k8s/user-service-deployment.yaml -n practicas-sa

  # Paso 4: Desplegar product-service (usa imagen pública de Docker Hub)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Desplegar Product Service'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Aplicando despliegue de Product Service..."
        kubectl apply -f k8s/product-service-deployment.yaml -n practicas-sa

# Opcional: esperar a que los pods estén listos
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Esperar Pods Listos'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Esperando a que los pods estén listos..."
        kubectl wait --for=condition=Ready pods --all -n practicas-sa --timeout=300s

# Logs
timeout: '1200s'
