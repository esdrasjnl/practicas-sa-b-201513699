# P7/cloudbuild.yaml
# Cloud Build para compilar y desplegar los microservicios en GCP

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Paso 1: Autenticaci√≥n en Artifact Registry
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud auth configure-docker us-central1-docker.pkg.dev

  # Paso 2: Build de user-service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/user-service:latest',
        './backend/user-service'
      ]

  # Paso 3: Build de product-service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/product-service:latest',
        './backend/product-service'
      ]

  # Paso 4: Push user-service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/user-service:latest'
      ]

  # Paso 5: Push product-service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/product-service:latest'
      ]

  # Paso 6: Aplicar despliegue en Kubernetes
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID
        kubectl apply -f k8s/mysql-deployment.yaml
        kubectl apply -f k8s/user-service-deployment.yaml
        kubectl apply -f k8s/product-service-deployment.yaml

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/user-service:latest'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/microservices-repo/product-service:latest'
